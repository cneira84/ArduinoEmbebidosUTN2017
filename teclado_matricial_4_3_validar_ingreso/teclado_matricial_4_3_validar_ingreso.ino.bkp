//----Ingreso con *xxxx#
//----Ingreso con **xy## (x nro de zona, y nro de entrada)
//----Ingreso con *0000# (activa cambio de pass)
const byte Filas = 4; //constante para filas
const byte Cols = 3; //constante para columnas
const byte LargoPass = 6;

byte PinsFilas[] = {24, 26, 28, 30}; //Nros de pins de filas
byte PinsCols[] = {39, 41, 43}; //Nros de pins de columnas

byte i=0, NroFila=0, NroCol = 0, PosPass = 0, estado = 0, j=0, CambiarPass = 0;
int Zona=0, Entrada=0;

char StringIngreso [LargoPass+1]; //definir el string de ingreso
char Password [LargoPass+1] = {'*','1','2','3','4','#'}; //definir password default
char StringCambioPass [LargoPass+1] = {'*','0','0','0','0','#'}; //definir password default

char Teclas [ Filas ][ Cols ] =
    {
        {'1','2','3'},
        {'4','5','6'},
        {'7','8','9'},
        {'*','0','#'}
     };

void setup() {
  Serial.begin(9600) ;  //Defino la salida para ver el output
  for (i=0; i < Filas;i++){ //Defino los pines de filas como entrada
    pinMode(PinsFilas[i], INPUT);
  }
  for (i=0; i < Cols;i++){ //Defino los pines de columnas como salida
    pinMode(PinsCols[i], OUTPUT);
  }
}

void loop() {
  estado = 0; 
  NroFila = 255;
  NroCol = 255;//Coloco un valor limite para detectar cuando no hay teclas presionadas
  for (i=0; i < Cols;i++){ //Inicializo las columnas - pulldown en las filas
    digitalWrite(PinsCols[i], LOW);
  }
  for (i=0; i < Cols;i++){
    digitalWrite(PinsCols[i], HIGH); //Seteo el indice verificador
    for (j=0; j < Filas;j++){ //Recorro las filas buscando 
      estado = digitalRead(PinsFilas[j]);
      if (estado == 1){ //Si esta en contacto guardo el nro de columna y fila
        NroCol=i;
        NroFila=j;
        }
      delay(15);
      }
    digitalWrite(PinsCols[i],LOW); //Vuelvo a estado 0 la columna
  }
  if (NroFila != 255 && NroCol != 255){ //Verifico si tengo alguna tecla pulsada
   StringIngreso[PosPass] = Teclas[NroFila][NroCol];
//   Serial.println(PosPass);
   PosPass = PosPass + 1;
   Serial.println("StringIngreso");
   Serial.println(StringIngreso);
   }
  if (CambiarPass == 1 && PosPass >= (LargoPass-2)){
      if (PosPass = (LargoPass-2)){
        for(i=0; i<PosPass; i++){
          Password[i+1] = StringIngreso[i];
        }
        if (strcmp(Password, StringCambioPass) == 1){  
          Serial.println("Nueva Password");
          Serial.println(Password);
          CambiarPass = 0;
          PosPass=0;
        }
        else
        {
         Serial.println("Contraseña no valida. Ingresela nuevamente");
         PosPass=0;
        }
      }
      else
      {
       PosPass= PosPass+1;
        }
  }
  else{
    if (PosPass >= LargoPass){
        if (CambiarPass == 0){
          if (strcmp(StringIngreso, StringCambioPass) == 0){
              Serial.println("Cambiar password");
              Serial.println(StringIngreso);
              CambiarPass = 1;
          }
        }
        if (StringIngreso[0] == '*' && StringIngreso[1] == '*' && StringIngreso[4] == '#' && StringIngreso[5] == '#'){
              Serial.println("Asignando Zona");
              Zona = int(StringIngreso[2]);
              Serial.println("Zona: ");
              Serial.println(char(Zona));
              Entrada = int(StringIngreso[3]);
              Serial.println("Entrada: ");
              Serial.println(char(Entrada));
        }
        else{
         if (StringIngreso[0] == '*' && StringIngreso[5] == '#'){
            Serial.println("Validando Password");
               Serial.println(Password);
               Serial.println(StringIngreso);
               if (strcmp (Password, StringIngreso) == 0){
                    Serial.println("Password OK" + StringIngreso[LargoPass]);
               }
               else{
                    Serial.println("Password Incorrecta" + StringIngreso[LargoPass]);
               }
            }
         else{
           Serial.println("Opción no válida");           
         }
        }   
        PosPass = 0;
      }
  }
 }
